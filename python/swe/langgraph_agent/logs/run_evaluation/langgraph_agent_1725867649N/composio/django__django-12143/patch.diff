diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index 137e6faa..a7fce9ce 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -1631,7 +1631,8 @@ class ModelAdmin(BaseModelAdmin):
 
     def _get_edited_object_pks(self, request, prefix):
         """Return POST data values of list_editable primary keys."""
-        pk_pattern = re.compile(r'{}-\d+-{}$'.format(prefix, self.model._meta.pk.name))
+        # Escape prefix and pk name to handle potential regex special characters
+        pk_pattern = re.compile(r'{}-\d+-{}$'.format(re.escape(prefix), re.escape(self.model._meta.pk.name)))
         return [value for key, value in request.POST.items() if pk_pattern.match(key)]
 
     def _get_list_editable_queryset(self, request, prefix):
diff --git a/tests/admin_views/test_actions.py b/tests/admin_views/test_actions.py
index a98b80a1..ca70b0c2 100644
--- a/tests/admin_views/test_actions.py
+++ b/tests/admin_views/test_actions.py
@@ -448,4 +448,31 @@ class AdminActionsPermissionTests(TestCase):
             'post': 'yes',
         }
         response = self.client.post(reverse('admin:admin_views_subscriber_changelist'), delete_confirmation_data)
-        self.assertEqual(response.status_code, 403)
+    def test_get_edited_object_pks_regex_special_chars(self):
+        """
+        Ensure that _get_edited_object_pks handles regex special characters in prefix and pk name.
+        """
+        from django.contrib import admin
+        from .admin import SubscriberAdmin
+        from .models import Subscriber
+
+        # Create a model admin instance
+        ma = SubscriberAdmin(Subscriber, admin.site)
+        
+        # Create a mock request with POST data containing regex special characters
+        mock_request = self.client.request().wsgi_request
+        mock_request.POST = {
+            'form-prefix[with]special(chars)-0-id': '1',
+            'form-prefix[with]special(chars)-1-id': '2',
+            'form-prefix[with]special(chars)-2-id': '3',
+            'form-other': 'data',
+        }
+        
+        # Test the method
+        result = ma._get_edited_object_pks(mock_request, 'form-prefix[with]special(chars)')
+        
+        # Assert that all the correct PKs were extracted
+        self.assertEqual(set(result), {'1', '2', '3'})
+
+        # Ensure other POST data was not included
+        self.assertNotIn('data', result)
