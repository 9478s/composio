diff --git a/django/utils/dateformat.py b/django/utils/dateformat.py
index 38e89c47..98c9aa98 100644
--- a/django/utils/dateformat.py
+++ b/django/utils/dateformat.py
@@ -313,8 +313,8 @@ class DateFormat(TimeFormat):
         return '%02d' % (self.data.year % 100)
 
     def Y(self):
-        "Year, 4 digits; e.g. '1999'"
-        return self.data.year
+        "Year, 4 digits; e.g. '1999', '0123'"
+        return f'{self.data.year:04d}'
 
     def z(self):
         """Day of the year, i.e. 1 to 366."""
diff --git a/tests/utils_tests/test_dateformat.py b/tests/utils_tests/test_dateformat.py
index c6d3ded8..0d425eed 100644
--- a/tests/utils_tests/test_dateformat.py
+++ b/tests/utils_tests/test_dateformat.py
@@ -91,6 +91,13 @@ class DateFormatTests(SimpleTestCase):
         self.assertEqual(dateformat.format(my_birthday, 'b'), 'jul')
         self.assertEqual(dateformat.format(my_birthday, 'n'), '7')
         self.assertEqual(dateformat.format(my_birthday, 'N'), 'July')
+        self.assertEqual(dateformat.format(my_birthday, 'N'), 'July')
+
+        # Test for years less than 1000
+        ancient_date = datetime(1, 1, 1)
+        self.assertEqual(dateformat.format(ancient_date, 'Y'), '0001')
+        very_ancient_date = datetime(250, 1, 1)
+        self.assertEqual(dateformat.format(very_ancient_date, 'Y'), '0250')
 
     def test_time_formats(self):
         my_birthday = datetime(1979, 7, 8, 22, 00)
