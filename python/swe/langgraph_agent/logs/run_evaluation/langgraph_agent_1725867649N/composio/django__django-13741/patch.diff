diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py
index b9eb3332..9a6614a8 100644
--- a/django/contrib/auth/forms.py
+++ b/django/contrib/auth/forms.py
@@ -56,6 +56,7 @@ class ReadOnlyPasswordHashField(forms.Field):
 
     def __init__(self, *args, **kwargs):
         kwargs.setdefault("required", False)
+        kwargs.setdefault("disabled", True)
         super().__init__(*args, **kwargs)
 
     def bound_data(self, data, initial):
diff --git a/tests/auth_tests/settings.py b/tests/auth_tests/settings.py
index 5de7f3be..8e16ec15 100644
--- a/tests/auth_tests/settings.py
+++ b/tests/auth_tests/settings.py
@@ -17,3 +17,18 @@ AUTH_TEMPLATES = [{
         ],
     },
 }]
+INSTALLED_APPS = [
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.sites',
+    'tests.auth_tests',
+]
+
+SECRET_KEY = 'test_key'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+    }
+}
diff --git a/tests/auth_tests/test_forms.py b/tests/auth_tests/test_forms.py
index 88b4b326..177380c9 100644
--- a/tests/auth_tests/test_forms.py
+++ b/tests/auth_tests/test_forms.py
@@ -1086,3 +1086,17 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase):
         for field_name, autocomplete in tests:
             with self.subTest(field_name=field_name, autocomplete=autocomplete):
                 self.assertEqual(form.fields[field_name].widget.attrs['autocomplete'], autocomplete)
+    def test_readonly_password_hash_field_disabled(self):
+        user = User.objects.get(username='testclient')
+        form = UserChangeForm(instance=user)
+        self.assertTrue(form.fields['password'].disabled)
+        self.assertIsInstance(form.fields['password'], ReadOnlyPasswordHashField)
+        self.assertIsInstance(form.fields['password'].widget, ReadOnlyPasswordHashWidget)
+
+class UserChangeFormTest(TestDataMixin, TestCase):
+    def test_readonly_password_hash_field_disabled(self):
+        user = User.objects.get(username='testclient')
+        form = UserChangeForm(instance=user)
+        self.assertTrue(form.fields['password'].disabled)
+        self.assertIsInstance(form.fields['password'], ReadOnlyPasswordHashField)
+        self.assertIsInstance(form.fields['password'].widget, ReadOnlyPasswordHashWidget)
