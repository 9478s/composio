diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py
index 61be31d8..a57304a1 100644
--- a/django/contrib/admin/sites.py
+++ b/django/contrib/admin/sites.py
@@ -442,10 +442,10 @@ class AdminSite:
 
     def autocomplete_view(self, request):
         return AutocompleteJsonView.as_view(admin_site=self)(request)
-
     @no_append_slash
     def catch_all_view(self, request, url):
         if settings.APPEND_SLASH and not url.endswith("/"):
+            urlconf = getattr(request, "urlconf", None)
             urlconf = getattr(request, "urlconf", None)
             try:
                 match = resolve("%s/" % request.path_info, urlconf)
@@ -453,7 +453,7 @@ class AdminSite:
                 pass
             else:
                 if getattr(match.func, "should_append_slash", True):
-                    return HttpResponsePermanentRedirect("%s/" % request.path)
+                    return HttpResponsePermanentRedirect(request.get_full_path(force_append_slash=True))
         raise Http404
 
     def _build_app_dict(self, request, label=None):
diff --git a/tests/admin_views/test_adminsite.py b/tests/admin_views/test_adminsite.py
index 68a32567..4a155b7f 100644
--- a/tests/admin_views/test_adminsite.py
+++ b/tests/admin_views/test_adminsite.py
@@ -84,6 +84,51 @@ class SiteEachContextTest(TestCase):
         self.assertEqual(user["name"], "Users")
 
 
+class SiteActionsTests(SimpleTestCase):
+    def setUp(self):
+        self.site = admin.AdminSite()
+
+    def test_add_action(self):
+        def test_action():
+            pass
+
+        self.site.add_action(test_action)
+        self.assertEqual(self.site.get_action("test_action"), test_action)
+
+    def test_disable_action(self):
+        action_name = "delete_selected"
+        self.assertEqual(self.site._actions[action_name], delete_selected)
+        self.site.disable_action(action_name)
+        self.assertNotIn(action_name, self.site._actions)
+
+    def test_get_disabled_action(self):
+        """AdminSite.get_action() returns an action even if it's disabled."""
+        action_name = "delete_selected"
+        self.assertEqual(self.site.get_action(action_name), delete_selected)
+        self.site.disable_action(action_name)
+        self.assertEqual(self.site.get_action(action_name), delete_selected)
+
+class AdminSiteCatchAllViewTests(TestCase):
+    @classmethod
+    def setUpTestData(cls):
+        cls.superuser = User.objects.create_superuser(
+            username='super',
+            password='secret',
+            email='super@example.com',
+        )
+
+    def setUp(self):
+        self.client.force_login(self.superuser)
+
+    @override_settings(APPEND_SLASH=True)
+    def test_catch_all_view_with_querystring(self):
+        response = self.client.get('/test_admin/admin/auth/user/foobar/?q=test', follow=True)
+        self.assertRedirects(response, '/test_admin/admin/auth/user/foobar/?q=test/', status_code=301)
+
+    @override_settings(APPEND_SLASH=False)
+    def test_catch_all_view_without_append_slash(self):
+        response = self.client.get('/test_admin/admin/auth/user/foobar/?q=test')
+        self.assertEqual(response.status_code, 404)
 class SiteActionsTests(SimpleTestCase):
     def setUp(self):
         self.site = admin.AdminSite()
