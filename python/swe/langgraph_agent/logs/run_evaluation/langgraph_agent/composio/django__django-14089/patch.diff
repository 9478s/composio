diff --git a/django/utils/datastructures.py b/django/utils/datastructures.py
index 871b0167..2beaf02d 100644
--- a/django/utils/datastructures.py
+++ b/django/utils/datastructures.py
@@ -5,6 +5,7 @@ from collections.abc import Mapping
 class OrderedSet:
     """
     A set which keeps the ordering of the inserted items.
+    Supports reversing using the reversed() built-in function.
     """
 
     def __init__(self, iterable=None):
@@ -33,6 +34,8 @@ class OrderedSet:
 
     def __len__(self):
         return len(self.dict)
+    def __reversed__(self):
+        return reversed(self.dict)
 
 
 class MultiValueDictKeyError(KeyError):
diff --git a/docs/releases/4.0.txt b/docs/releases/4.0.txt
index 27f19043..ce85ed71 100644
--- a/docs/releases/4.0.txt
+++ b/docs/releases/4.0.txt
@@ -95,6 +95,17 @@ Minor features
 
 * ...
 
+:mod:`django.contrib.gis`
+~~~~~~~~~~~~~~~~~~~~~~~~~
+
+* ...
+
+:mod:`django.utils`
+~~~~~~~~~~~~~~~~~~~
+
+* The :class:`~django.utils.datastructures.OrderedSet` class now supports reversing using the :func:`reversed` built-in function.
+
+
 :mod:`django.contrib.gis`
 ~~~~~~~~~~~~~~~~~~~~~~~~~
 
diff --git a/tests/utils_tests/test_datastructures.py b/tests/utils_tests/test_datastructures.py
index 45d172f9..e3ca7097 100644
--- a/tests/utils_tests/test_datastructures.py
+++ b/tests/utils_tests/test_datastructures.py
@@ -54,6 +54,15 @@ class OrderedSetTests(SimpleTestCase):
         s.add(2)
         s.add(2)
         self.assertEqual(len(s), 2)
+        self.assertEqual(len(s), 2)
+
+    def test_reversed(self):
+        s = OrderedSet([1, 2, 3, 4])
+        self.assertEqual(list(reversed(s)), [4, 3, 2, 1])
+        s.remove(3)
+        self.assertEqual(list(reversed(s)), [4, 2, 1])
+        s.add(5)
+        self.assertEqual(list(reversed(s)), [5, 4, 2, 1])
 
 
 class MultiValueDictTests(SimpleTestCase):
