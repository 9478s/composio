diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index 137e6faa..effc5e92 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -1631,7 +1631,7 @@ class ModelAdmin(BaseModelAdmin):
 
     def _get_edited_object_pks(self, request, prefix):
         """Return POST data values of list_editable primary keys."""
-        pk_pattern = re.compile(r'{}-\d+-{}$'.format(prefix, self.model._meta.pk.name))
+        pk_pattern = re.compile(r'{}-\d+-{}$'.format(re.escape(prefix), re.escape(self.model._meta.pk.name)))
         return [value for key, value in request.POST.items() if pk_pattern.match(key)]
 
     def _get_list_editable_queryset(self, request, prefix):
diff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py
index c9ca6409..6a566d44 100644
--- a/tests/admin_views/tests.py
+++ b/tests/admin_views/tests.py
@@ -6344,4 +6344,29 @@ class GetFormsetsWithInlinesArgumentTest(TestCase):
 
         post_data = {'name': '2'}
         response = self.client.post(reverse('admin:admin_views_implicitlygeneratedpk_change', args=(1,)), post_data)
-        self.assertEqual(response.status_code, 302)
+    def test_get_edited_object_pks_with_special_characters(self):
+        class SpecialCharModelAdmin(ModelAdmin):
+            list_editable = ['name']
+
+        model_admin = SpecialCharModelAdmin(Article, AdminSite())
+        request = self.factory.post('/', data={
+            'form-0-id': '1',
+            'form-0-name': 'Test Article',
+            '_save': 'Save',
+        })
+        request.user = self.superuser
+
+        # Test with a prefix containing special regex characters
+        prefix = 'form-0+1*?'
+        pks = model_admin._get_edited_object_pks(request, prefix)
+        self.assertEqual(pks, ['1'])
+
+        # Test with a normal prefix
+        prefix = 'form'
+        pks = model_admin._get_edited_object_pks(request, prefix)
+        self.assertEqual(pks, ['1'])
+
+        # Test with no matching keys
+        prefix = 'non_matching'
+        pks = model_admin._get_edited_object_pks(request, prefix)
+        self.assertEqual(pks, [])
