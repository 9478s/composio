diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py
index 7a99b126..bcf15051 100644
--- a/django/db/models/fields/files.py
+++ b/django/db/models/fields/files.py
@@ -295,7 +295,7 @@ class FileField(Field):
         if kwargs.get("max_length") == 100:
             del kwargs["max_length"]
         kwargs["upload_to"] = self.upload_to
-        if self.storage is not default_storage:
+        if hasattr(self, "_storage_callable") or self.storage is not default_storage:
             kwargs["storage"] = getattr(self, "_storage_callable", self.storage)
         return name, path, args, kwargs
 
diff --git a/tests/model_fields/test_file_field_deconstruct.py b/tests/model_fields/test_file_field_deconstruct.py
new file mode 100644
index 00000000..0f2f9a06
--- /dev/null
+++ b/tests/model_fields/test_file_field_deconstruct.py
@@ -0,0 +1,31 @@
+from django.core.files.storage import default_storage
+from django.db import models
+from django.test import SimpleTestCase
+
+def get_storage():
+    return default_storage
+
+class FileFieldDeconstructTest(SimpleTestCase):
+    def test_deconstruct_with_callable_storage(self):
+        field = models.FileField(storage=get_storage)
+        name, path, args, kwargs = field.deconstruct()
+        self.assertEqual(kwargs['storage'], get_storage)
+
+    def test_deconstruct_with_default_storage(self):
+        field = models.FileField()
+        name, path, args, kwargs = field.deconstruct()
+        self.assertNotIn('storage', kwargs)
+
+    def test_deconstruct_with_custom_storage(self):
+        class CustomStorage:
+            pass
+        custom_storage = CustomStorage()
+        field = models.FileField(storage=custom_storage)
+        name, path, args, kwargs = field.deconstruct()
+        self.assertEqual(kwargs['storage'], custom_storage)
+
+    def test_deconstruct_with_callable_returning_default_storage(self):
+        field = models.FileField(storage=lambda: default_storage)
+        name, path, args, kwargs = field.deconstruct()
+        self.assertTrue(callable(kwargs['storage']))
+        self.assertEqual(kwargs['storage'](), default_storage)
\ No newline at end of file
