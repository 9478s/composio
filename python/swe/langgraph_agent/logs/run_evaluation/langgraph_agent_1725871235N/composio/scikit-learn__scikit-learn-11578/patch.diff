diff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py
index e4ea696..bc18039 100644
--- a/sklearn/linear_model/logistic.py
+++ b/sklearn/linear_model/logistic.py
@@ -780,6 +780,12 @@ def _log_reg_scoring_path(X, y, train, test, pos_class=None, Cs=10,
                           max_squared_sum=None, sample_weight=None):
     """Computes scores across logistic_regression_path
 
+    This function creates a LogisticRegression instance using the same parameters
+    as those passed to this function, ensuring consistency in the scoring process.
+
+    Parameters
+    ----------
+
     Parameters
     ----------
     X : {array-like, sparse matrix}, shape (n_samples, n_features)
@@ -922,7 +928,19 @@ def _log_reg_scoring_path(X, y, train, test, pos_class=None, Cs=10,
         check_input=False, max_squared_sum=max_squared_sum,
         sample_weight=sample_weight)
 
-    log_reg = LogisticRegression(fit_intercept=fit_intercept)
+    log_reg = LogisticRegression(
+        fit_intercept=fit_intercept,
+        multi_class=multi_class,
+        penalty=penalty,
+        dual=dual,
+        tol=tol,
+        C=1.0,  # You might want to use a different value or make it a parameter
+        class_weight=class_weight,
+        random_state=random_state,
+        solver=solver,
+        max_iter=max_iter,
+        intercept_scaling=float(intercept_scaling)  # Convert to float
+    )
 
     # The score method of Logistic Regression has a classes_ attribute.
     if multi_class == 'ovr':
