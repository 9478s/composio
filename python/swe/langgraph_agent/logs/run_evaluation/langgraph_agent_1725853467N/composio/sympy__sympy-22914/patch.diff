diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index 3a72ab6..e64bfc5 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -423,6 +423,12 @@ def _hprint_Pow(self, expr, rational=False, sqrt='math.sqrt'):
 
 
 class PythonCodePrinter(AbstractPythonCodePrinter):
+    def _print_Min(self, expr):
+        return "min({})".format(", ".join(self._print(arg) for arg in expr.args))
+
+    def _print_Max(self, expr):
+        return "max({})".format(", ".join(self._print(arg) for arg in expr.args))
+
 
     def _print_sign(self, e):
         return '(0.0 if {e} == 0 else {f}(1, {e}))'.format(
diff --git a/sympy/printing/tests/test_pycode.py b/sympy/printing/tests/test_pycode.py
index 9c1285d..80c4356 100644
--- a/sympy/printing/tests/test_pycode.py
+++ b/sympy/printing/tests/test_pycode.py
@@ -58,6 +58,15 @@ def test_PythonCodePrinter():
     assert prntr.doprint((2,3)) == "(2, 3)"
     assert prntr.doprint([2,3]) == "[2, 3]"
 
+def test_Min_Max():
+    from sympy import Min, Max, symbols
+    x, y = symbols('x y')
+    prntr = PythonCodePrinter()
+    assert prntr.doprint(Min(x, y)) == 'min(x, y)'
+    assert prntr.doprint(Max(x, y)) == 'max(x, y)'
+    assert prntr.doprint(Min(x, y, 0)) == 'min(x, y, 0)'
+    assert prntr.doprint(Max(x, y, 0)) == 'max(x, y, 0)'
+
 
 def test_PythonCodePrinter_standard():
     prntr = PythonCodePrinter()
