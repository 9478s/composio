diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py
index 3daf84c..ef6ec50 100644
--- a/sympy/physics/units/unitsystem.py
+++ b/sympy/physics/units/unitsystem.py
@@ -9,6 +9,7 @@
 from sympy.core.mul import Mul
 from sympy.core.power import Pow
 from sympy.core.singleton import S
+from sympy import exp
 from sympy.physics.units.dimensions import _QuantityMapper
 from sympy.physics.units.quantities import Quantity
 
@@ -170,6 +171,13 @@ def _collect_factor_and_dimension(self, expr):
             if self.get_dimension_system().is_dimensionless(exp_dim):
                 exp_dim = 1
             return factor ** exp_factor, dim ** (exp_factor * exp_dim)
+        elif isinstance(expr, exp):
+            factor, dim = self._collect_factor_and_dimension(expr.args[0])
+            if not self.get_dimension_system().is_dimensionless(dim):
+                raise ValueError(
+                    'Dimension of "{}" is {}, '
+                    'but it should be dimensionless'.format(expr, dim))
+            return exp(factor), Dimension(1)
         elif isinstance(expr, Add):
             factor, dim = self._collect_factor_and_dimension(expr.args[0])
             for addend in expr.args[1:]:
@@ -198,6 +206,7 @@ def _collect_factor_and_dimension(self, expr):
             return S.One, expr
         else:
             return expr, Dimension(1)
+            return expr, Dimension(1)
 
     def get_units_non_prefixed(self) -> tSet[Quantity]:
         """
