diff --git a/django/utils/datastructures.py b/django/utils/datastructures.py
index 871b0167..5e8e9772 100644
--- a/django/utils/datastructures.py
+++ b/django/utils/datastructures.py
@@ -5,6 +5,7 @@ from collections.abc import Mapping
 class OrderedSet:
     """
     A set which keeps the ordering of the inserted items.
+    This class is reversible, allowing it to be used with Python's reversed() function.
     """
 
     def __init__(self, iterable=None):
@@ -34,6 +35,12 @@ class OrderedSet:
     def __len__(self):
         return len(self.dict)
 
+    def __reversed__(self):
+        return reversed(self.dict)
+
+    def __len__(self):
+        return len(self.dict)
+
 
 class MultiValueDictKeyError(KeyError):
     pass
diff --git a/tests/utils_tests/test_datastructures.py b/tests/utils_tests/test_datastructures.py
index 45d172f9..5101f04a 100644
--- a/tests/utils_tests/test_datastructures.py
+++ b/tests/utils_tests/test_datastructures.py
@@ -54,6 +54,17 @@ class OrderedSetTests(SimpleTestCase):
         s.add(2)
         s.add(2)
         self.assertEqual(len(s), 2)
+    def test_len(self):
+        s = OrderedSet()
+        self.assertEqual(len(s), 0)
+        s.add(1)
+        s.add(2)
+        s.add(2)
+        self.assertEqual(len(s), 2)
+
+    def test_reversed(self):
+        s = OrderedSet('abcde')
+        self.assertEqual(list(reversed(s)), ['e', 'd', 'c', 'b', 'a'])
 
 
 class MultiValueDictTests(SimpleTestCase):
