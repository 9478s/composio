diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py
index 7a99b126..2176bc9d 100644
--- a/django/db/models/fields/files.py
+++ b/django/db/models/fields/files.py
@@ -236,10 +236,10 @@ class FileField(Field):
         self, verbose_name=None, name=None, upload_to="", storage=None, **kwargs
     ):
         self._primary_key_set_explicitly = "primary_key" in kwargs
+        super().__init__(verbose_name, name, **kwargs)
 
         self.storage = storage or default_storage
         if callable(self.storage):
-            # Hold a reference to the callable for deconstruct().
             self._storage_callable = self.storage
             self.storage = self.storage()
             if not isinstance(self.storage, Storage):
@@ -254,7 +254,6 @@ class FileField(Field):
         self.upload_to = upload_to
 
         kwargs.setdefault("max_length", 100)
-        super().__init__(verbose_name, name, **kwargs)
 
     def check(self, **kwargs):
         return [
@@ -295,8 +294,10 @@ class FileField(Field):
         if kwargs.get("max_length") == 100:
             del kwargs["max_length"]
         kwargs["upload_to"] = self.upload_to
-        if self.storage is not default_storage:
-            kwargs["storage"] = getattr(self, "_storage_callable", self.storage)
+        if hasattr(self, "_storage_callable"):
+            kwargs["storage"] = self._storage_callable
+        elif self.storage is not default_storage:
+            kwargs["storage"] = self.storage
         return name, path, args, kwargs
 
     def get_internal_type(self):
