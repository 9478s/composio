diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 23c3a08c..fdaa14c9 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -178,16 +178,19 @@ def floatformat(text, arg=-1):
             )
         )
 
-    exp = Decimal(1).scaleb(-abs(p))
-    # Set the precision high enough to avoid an exception (#15789).
-    tupl = d.as_tuple()
-    units = len(tupl[1])
-    units += -tupl[2] if m else tupl[2]
-    prec = abs(p) + units + 1
-
-    # Avoid conversion to scientific notation by accessing `sign`, `digits`,
-    # and `exponent` from Decimal.as_tuple() directly.
-    rounded_d = d.quantize(exp, ROUND_HALF_UP, Context(prec=prec))
+    if p == 0:
+        rounded_d = d.to_integral_value(ROUND_HALF_UP)
+    else:
+        exp = Decimal(1).scaleb(-abs(p))
+        # Set the precision high enough to avoid an exception (#15789).
+        tupl = d.as_tuple()
+        units = len(tupl[1])
+        units += -tupl[2] if m else tupl[2]
+        prec = max(abs(p) + units + 1, 1)  # Ensure prec is at least 1
+
+        # Avoid conversion to scientific notation by accessing `sign`, `digits`,
+        # and `exponent` from Decimal.as_tuple() directly.
+        rounded_d = d.quantize(exp, ROUND_HALF_UP, Context(prec=prec))
     sign, digits, exponent = rounded_d.as_tuple()
     digits = [str(digit) for digit in reversed(digits)]
     while len(digits) <= abs(exponent):
