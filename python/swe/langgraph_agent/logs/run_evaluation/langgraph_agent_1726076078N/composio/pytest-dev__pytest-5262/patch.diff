diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py
index 25eab7f..f2d9cc0 100644
--- a/src/_pytest/capture.py
+++ b/src/_pytest/capture.py
@@ -423,11 +423,12 @@ def safe_text_dupfile(f, mode, default_encoding="UTF8"):
 
 
 class EncodedFile(object):
-    errors = "strict"  # possibly needed by py3 code (issue555)
+    errors = "strict"
 
     def __init__(self, buffer, encoding):
         self.buffer = buffer
         self.encoding = encoding
+        self.mode = buffer.mode.replace('b', '')  # Remove 'b' from the mode
 
     def write(self, obj):
         if isinstance(obj, six.text_type):
@@ -442,14 +443,16 @@ class EncodedFile(object):
         data = "".join(linelist)
         self.write(data)
 
+    def __getattr__(self, name):
+        if name == 'mode':
+            return self.mode  # Return our custom mode
+        return getattr(self.buffer, name)
+
     @property
     def name(self):
         """Ensure that file.name is a string."""
         return repr(self.buffer)
 
-    def __getattr__(self, name):
-        return getattr(object.__getattribute__(self, "buffer"), name)
-
 
 CaptureResult = collections.namedtuple("CaptureResult", ["out", "err"])
 
