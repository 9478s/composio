+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libglib_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"'
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libglib_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"'
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libglib_activate.sh
+++ export GSETTINGS_SCHEMA_DIR_CONDA_BACKUP=
+++ GSETTINGS_SCHEMA_DIR_CONDA_BACKUP=
+++ export GSETTINGS_SCHEMA_DIR=/opt/miniconda3/envs/testbed/share/glib-2.0/schemas
+++ GSETTINGS_SCHEMA_DIR=/opt/miniconda3/envs/testbed/share/glib-2.0/schemas
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh
+++ test -n ''
+++ xml_catalog_files_libxml2=
+++ XML_CATALOG_FILES=
+++ conda_catalog_files=
+++ ifs_libxml2=' 	
'
+++ IFS=' '
+++ rem=/opt/miniconda3/envs/testbed
+++ for pre in ${rem}
+++ test '' = /opt/miniconda3/envs/testbed
+++ conda_catalog_files=/opt/miniconda3/envs/testbed
+++ rem=
+++ IFS=' 	
'
+++ conda_catalog_files='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ export 'XML_CATALOG_FILES=file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ XML_CATALOG_FILES='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ unset conda_catalog_files ifs_libxml2 rem
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   lib/matplotlib/offsetbox.py
	modified:   lib/matplotlib/tests/test_offsetbox.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit 8f0003ae902952372824c9917975fb372c026a42
Merge: 9b7c902fd7 340eee2114
Author: Thomas A Caswell <tcaswell@gmail.com>
Date:   Wed Nov 30 16:01:49 2022 -0500

    Merge pull request #23812 from tacaswell/ci_add_codeql
    
    Ci add codeql

+ git diff 8f0003ae902952372824c9917975fb372c026a42
diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index 3a506543ac..89dd704ef4 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -166,10 +166,10 @@ def _get_aligned_offsets(hd_list, height, align="baseline"):
         descent = max(d for h, d in hd_list)
         height = height_descent + descent
         offsets = [0. for h, d in hd_list]
-    elif align in ["left", "top"]:
+    elif align in ["left", "bottom"]:  # Changed from "top" to "bottom"
         descent = 0.
         offsets = [d for h, d in hd_list]
-    elif align in ["right", "bottom"]:
+    elif align in ["right", "top"]:  # Changed from "bottom" to "top"
         descent = 0.
         offsets = [height - h + d for h, d in hd_list]
     elif align == "center":
@@ -459,9 +459,31 @@ class VPacker(PackerBase):
 class HPacker(PackerBase):
     """
     HPacker packs its children horizontally, automatically adjusting their
-    relative positions at draw time.
-    """
+    positions so that they do not overlap with each other.
 
+    Parameters
+    ----------
+    pad : float, default: 0.0
+        Padding between items, in points.
+    sep : float, default: 0.0
+        Spacing between items, in points.
+    width : float, default: None
+        A fixed width, in points.
+    height : float, default: None
+        A fixed height, in points.
+    align : {'baseline', 'left', 'top', 'right', 'bottom', 'center'}, default: 'baseline'
+        The alignment of the boxes. For vertical alignment:
+        - 'top': Align the top edges of the boxes.
+        - 'bottom': Align the bottom edges of the boxes.
+        - 'center': Align the vertical centers of the boxes.
+        For horizontal alignment:
+        - 'left': Align the left edges of the boxes.
+        - 'right': Align the right edges of the boxes.
+        - 'center': Align the horizontal centers of the boxes.
+        - 'baseline': Align the baselines of the text (if any).
+    mode : {'fixed', 'expand', 'equal'}, default: 'fixed'
+        The packing mode.
+    """
     def get_extent_offsets(self, renderer):
         # docstring inherited
         dpicor = renderer.points_to_pixels(1.)
diff --git a/lib/matplotlib/tests/test_offsetbox.py b/lib/matplotlib/tests/test_offsetbox.py
index 02756ff559..29bf4798bc 100644
--- a/lib/matplotlib/tests/test_offsetbox.py
+++ b/lib/matplotlib/tests/test_offsetbox.py
@@ -334,4 +334,60 @@ def test_arrowprops_copied():
                         boxcoords="axes fraction", box_alignment=(0., .5),
                         arrowprops=arrowprops)
     assert ab.arrowprops is not ab
-    assert arrowprops["relpos"] == (.3, .7)
+def test_hpacker_alignment():
+    from matplotlib.offsetbox import HPacker, DrawingArea
+    from matplotlib.patches import Rectangle
+
+    # Create two DrawingAreas with different heights
+    da1 = DrawingArea(10, 20)
+    da1.add_artist(Rectangle((0, 0), 10, 20))
+
+    da2 = DrawingArea(10, 30)
+    da2.add_artist(Rectangle((0, 0), 10, 30))
+
+    # Test top alignment
+    hpack_top = HPacker(children=[da1, da2], pad=0, sep=0, align="top")
+    _, _, _, _, offsets_top = hpack_top.get_extent_offsets(None)
+    assert offsets_top[0][1] == offsets_top[1][1], "Top edges should be aligned"
+
+    # Test bottom alignment
+    hpack_bottom = HPacker(children=[da1, da2], pad=0, sep=0, align="bottom")
+    _, _, _, _, offsets_bottom = hpack_bottom.get_extent_offsets(None)
+    assert (offsets_bottom[0][1] + 20 == offsets_bottom[1][1] + 30), "Bottom edges should be aligned"
+
+    # Test center alignment
+    hpack_center = HPacker(children=[da1, da2], pad=0, sep=0, align="center")
+    _, _, _, _, offsets_center = hpack_center.get_extent_offsets(None)
+    assert (offsets_center[0][1] + 10 == offsets_center[1][1] + 15), "Centers should be aligned"
+
+def test_hpacker_vertical_alignment():
+    from matplotlib.offsetbox import HPacker, DrawingArea
+    from matplotlib.patches import Rectangle
+
+    # Create two DrawingAreas with different heights
+    da1 = DrawingArea(10, 20)
+    da1.add_artist(Rectangle((0, 0), 10, 20))
+
+    da2 = DrawingArea(10, 30)
+    da2.add_artist(Rectangle((0, 0), 10, 30))
+
+    # Test all vertical alignment options
+    alignments = ['top', 'bottom', 'center', 'baseline']
+    for align in alignments:
+        hpack = HPacker(children=[da1, da2], pad=0, sep=0, align=align)
+        _, height, _, _, offsets = hpack.get_extent_offsets(None)
+
+        if align == 'top':
+            assert offsets[0][1] == offsets[1][1], f"{align} alignment failed"
+        elif align == 'bottom':
+            assert (offsets[0][1] + 20 == offsets[1][1] + 30), f"{align} alignment failed"
+        elif align == 'center':
+            assert (offsets[0][1] + 10 == offsets[1][1] + 15), f"{align} alignment failed"
+        elif align == 'baseline':
+            # Baseline alignment should behave like bottom alignment for rectangles
+            assert (offsets[0][1] + 20 == offsets[1][1] + 30), f"{align} alignment failed"
+
+        # Check that the height of the HPacker is correct
+        assert height == max(20, 30), f"Incorrect height for {align} alignment"
+
+# Add more tests here if needed
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libglib_deactivate.sh"
PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval '. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libglib_deactivate.sh"
PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh
++++ test -n ''
++++ unset XML_CATALOG_FILES
++++ unset xml_catalog_files_libxml2
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libglib_deactivate.sh
++++ export GSETTINGS_SCHEMA_DIR=
++++ GSETTINGS_SCHEMA_DIR=
++++ unset GSETTINGS_SCHEMA_DIR_CONDA_BACKUP
++++ '[' -z ']'
++++ unset GSETTINGS_SCHEMA_DIR
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libglib_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"'
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libglib_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"'
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libglib_activate.sh
+++ export GSETTINGS_SCHEMA_DIR_CONDA_BACKUP=
+++ GSETTINGS_SCHEMA_DIR_CONDA_BACKUP=
+++ export GSETTINGS_SCHEMA_DIR=/opt/miniconda3/envs/testbed/share/glib-2.0/schemas
+++ GSETTINGS_SCHEMA_DIR=/opt/miniconda3/envs/testbed/share/glib-2.0/schemas
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh
+++ test -n ''
+++ xml_catalog_files_libxml2=
+++ XML_CATALOG_FILES=
+++ conda_catalog_files=
+++ ifs_libxml2=' 	
'
+++ IFS=' '
+++ rem=/opt/miniconda3/envs/testbed
+++ for pre in ${rem}
+++ test '' = /opt/miniconda3/envs/testbed
+++ conda_catalog_files=/opt/miniconda3/envs/testbed
+++ rem=
+++ IFS=' 	
'
+++ conda_catalog_files='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ export 'XML_CATALOG_FILES=file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ XML_CATALOG_FILES='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ unset conda_catalog_files ifs_libxml2 rem
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: contourpy>=1.0.1 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (1.1.0)
Requirement already satisfied: cycler>=0.10 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (0.11.0)
Requirement already satisfied: fonttools>=4.22.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (4.42.1)
Requirement already satisfied: kiwisolver>=1.0.1 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (1.4.5)
Requirement already satisfied: numpy>=1.19 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (1.25.2)
Requirement already satisfied: packaging>=20.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (23.1)
Requirement already satisfied: pillow>=6.2.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (10.0.0)
Requirement already satisfied: pyparsing>=2.3.1 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (3.0.9)
Requirement already satisfied: python-dateutil>=2.7 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (2.8.2)
Requirement already satisfied: setuptools-scm>=7 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (7.1.0)
Requirement already satisfied: six>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from python-dateutil>=2.7->matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (1.16.0)
Requirement already satisfied: setuptools in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from setuptools-scm>=7->matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (68.1.2)
Requirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from setuptools-scm>=7->matplotlib==3.7.0.dev821+g8f0003ae90.d20240912) (4.7.1)
Building wheels for collected packages: matplotlib
  Building editable for matplotlib (pyproject.toml): started
  Building editable for matplotlib (pyproject.toml): still running...
  Building editable for matplotlib (pyproject.toml): still running...
  Building editable for matplotlib (pyproject.toml): still running...
  Building editable for matplotlib (pyproject.toml): finished with status 'done'
  Created wheel for matplotlib: filename=matplotlib-3.7.0.dev821+g8f0003ae90.d20240912-0.editable-cp311-cp311-linux_x86_64.whl size=23605 sha256=6b030e48c4670f23770fbbe2311f350b416c7220eead2610b281efc298e2938f
  Stored in directory: /tmp/pip-ephem-wheel-cache-mrkhozmg/wheels/49/5f/4f/01b7d31ea6ddac9643da788242d33e5fd3467d95d17b032c6b
Successfully built matplotlib
Installing collected packages: matplotlib
  Attempting uninstall: matplotlib
    Found existing installation: matplotlib 3.7.0.dev821+g8f0003ae90
    Uninstalling matplotlib-3.7.0.dev821+g8f0003ae90:
      Successfully uninstalled matplotlib-3.7.0.dev821+g8f0003ae90
Successfully installed matplotlib-3.7.0.dev821+g8f0003ae90.d20240912
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout 8f0003ae902952372824c9917975fb372c026a42 lib/matplotlib/tests/test_offsetbox.py
Updated 1 path from 0087e1333e
+ git apply -v -
Checking patch lib/matplotlib/tests/test_offsetbox.py...
Applied patch lib/matplotlib/tests/test_offsetbox.py cleanly.
+ pytest -rA lib/matplotlib/tests/test_offsetbox.py
============================= test session starts ==============================
platform linux -- Python 3.11.9, pytest-8.3.2, pluggy-1.5.0
rootdir: /testbed
configfile: pytest.ini
plugins: cov-5.0.0, xdist-3.6.1, timeout-2.3.1, rerunfailures-14.0
collected 278 items

lib/matplotlib/tests/test_offsetbox.py ..s.............................. [ 11%]
........................................................................ [ 37%]
........................................................................ [ 63%]
........................................................................ [ 89%]
.............................                                            [100%]

==================================== PASSES ====================================
=========================== short test summary info ============================
PASSED lib/matplotlib/tests/test_offsetbox.py::test_offsetbox_clipping[png]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_offsetbox_clipping[pdf]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_offsetbox_clip_children
PASSED lib/matplotlib/tests/test_offsetbox.py::test_offsetbox_loc_codes
PASSED lib/matplotlib/tests/test_offsetbox.py::test_expand_with_tight_layout
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-250-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-1-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand-0-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[expand--1-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-250-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-1-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed-0-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[fixed--1-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-250-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-1-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal-0-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-250-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-250-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-250-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-250-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-100-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-100-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-100-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-100-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-0-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-0-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-0-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-0-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1--1-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1--1-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1--1-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1--1-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-None-widths0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-None-widths1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-None-widths2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets[equal--1-None-widths3]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_fixed[widths0-None-1-expected0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_fixed[widths1-10-1-expected1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_fixed[widths2-5-1-expected2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_expand[widths0-None-None-expected0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_expand[widths1-10-1-expected1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_expand[widths2-5-1-expected2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_equal[widths0-6-None-expected0]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_equal[widths1-2-None-expected1]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_equal[widths2-None-1-expected2]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_get_packed_offsets_equal_total_none_sep_none
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[axes fraction-draw]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[axes fraction-image]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[axes fraction-text]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[axes pixels-draw]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[axes pixels-image]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[axes pixels-text]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[axes points-draw]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[axes points-image]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[axes points-text]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[data-draw]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[data-image]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_picking[data-text]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_anchoredtext_horizontal_alignment[png]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_annotationbbox_extents
PASSED lib/matplotlib/tests/test_offsetbox.py::test_zorder
PASSED lib/matplotlib/tests/test_offsetbox.py::test_arrowprops_copied
PASSED lib/matplotlib/tests/test_offsetbox.py::test_packers[baseline]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_packers[bottom]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_packers[top]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_packers[left]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_packers[right]
PASSED lib/matplotlib/tests/test_offsetbox.py::test_packers[center]
SKIPPED [1] ../opt/miniconda3/envs/testbed/lib/python3.11/contextlib.py:81: Cannot compare svg files because Inkscape is not installed
======================= 277 passed, 1 skipped in 20.60s ========================
+ git checkout 8f0003ae902952372824c9917975fb372c026a42 lib/matplotlib/tests/test_offsetbox.py
Updated 1 path from 0087e1333e
