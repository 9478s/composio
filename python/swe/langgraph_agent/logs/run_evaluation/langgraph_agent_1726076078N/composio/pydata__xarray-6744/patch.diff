diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py
index aef290f..7aea214 100644
--- a/xarray/core/rolling.py
+++ b/xarray/core/rolling.py
@@ -248,7 +248,14 @@ class DataArrayRolling(Rolling["DataArray"]):
             Minimum number of observations in window required to have a value
             (otherwise result is NA). The default, None, is equivalent to
             setting min_periods equal to the size of the window.
-        center : bool, default: False
+        center : bool or dict-like, default: False
+            Set the labels at the center of the window. If dict-like, set this
+            property per rolling dimension. When manually iterating over the
+            rolling object, this parameter is now respected.
+
+        Returns
+        -------
+        rolling : type of input argument
             Set the labels at the center of the window.
 
         Returns
@@ -270,15 +277,27 @@ class DataArrayRolling(Rolling["DataArray"]):
     def __iter__(self) -> Iterator[tuple[RollingKey, DataArray]]:
         if self.ndim > 1:
             raise ValueError("__iter__ is only supported for 1d-rolling")
-        stops = np.arange(1, len(self.window_labels) + 1)
-        starts = stops - int(self.window[0])
-        starts[: int(self.window[0])] = 0
+        
+        window_size = int(self.window[0])
+        total_length = len(self.window_labels)
+        
+        if self.center:
+            offset = window_size // 2
+            starts = np.arange(0, total_length) - offset
+            stops = starts + window_size
+        else:
+            stops = np.arange(1, total_length + 1)
+            starts = stops - window_size
+        
+        starts = np.maximum(starts, 0)
+        stops = np.minimum(stops, total_length)
+        
         for (label, start, stop) in zip(self.window_labels, starts, stops):
             window = self.obj.isel({self.dim[0]: slice(start, stop)})
-
+            
             counts = window.count(dim=self.dim[0])
             window = window.where(counts >= self.min_periods)
-
+            
             yield (label, window)
 
     def construct(
