diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py
index 91bfcea..aad5717 100644
--- a/sympy/functions/elementary/piecewise.py
+++ b/sympy/functions/elementary/piecewise.py
@@ -810,15 +810,25 @@ def _eval_subs(self, old, new):
         # somewhat more efficient by avoiding other substitutions
         # and avoiding invalid conditions that appear after a
         # True condition
+        from sympy import sympify, Expr
         args = list(self.args)
         args_exist = False
         for i, (e, c) in enumerate(args):
-            c = c._subs(old, new)
-            if c != False:
-                args_exist = True
-                e = e._subs(old, new)
-            args[i] = (e, c)
-            if c == True:
+            try:
+                new_c = sympify(c._subs(old, new))
+                if not isinstance(new_c, Boolean):
+                    new_c = c  # Keep the original condition if substitution fails
+                if new_c != False:
+                    args_exist = True
+                    new_e = sympify(e._subs(old, new))
+                    if not isinstance(new_e, Expr):
+                        new_e = e  # Keep the original expression if substitution fails
+                else:
+                    new_e, new_c = e, c  # Keep original values if condition is False
+            except Exception:
+                new_e, new_c = e, c  # Keep original values if substitution fails
+            args[i] = (new_e, new_c)
+            if new_c == True:
                 break
         if not args_exist:
             args = ((Undefined, True),)
