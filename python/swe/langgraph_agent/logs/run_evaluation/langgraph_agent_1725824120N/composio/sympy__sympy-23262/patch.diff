diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index 1877c3f..43bc29c 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -528,6 +528,13 @@ def _print_IndexedBase(self, expr):
 
 class PythonCodePrinter(AbstractPythonCodePrinter):
 
+    def _print_tuple(self, expr):
+        if len(expr) == 1:
+            return "(%s,)" % self._print(expr[0])
+        else:
+            return "(%s)" % self.stringify(expr, ", ")
+
+
     def _print_sign(self, e):
         return '(0.0 if {e} == 0 else {f}(1, {e}))'.format(
             f=self._module_format('math.copysign'), e=self._print(e.args[0]))
diff --git a/sympy/utilities/tests/test_lambdify.py b/sympy/utilities/tests/test_lambdify.py
index 023c2fb..c06803d 100644
--- a/sympy/utilities/tests/test_lambdify.py
+++ b/sympy/utilities/tests/test_lambdify.py
@@ -1189,7 +1189,25 @@ def test_issue_14941():
     f1 = lambdify([x, y], {x: 3, y: 3}, 'sympy')
     assert f1(2, 3) == {2: 3, 3: 3}
 
-    # test tuple
+# test tuple
+def test_tuple():
+    f = lambdify(x, (1, x))
+    assert f(2) == (1, 2)
+
+    f = lambdify((x, y), (x, y))
+    assert f(1, 2) == (1, 2)
+
+    f = lambdify(x, (1, x, lambda y: x+y))
+    assert f(2)[0] == 1
+    assert f(2)[1] == 2
+    assert f(2)[2](3) == 5
+
+    f = lambdify((x, y), Matrix([x, y]))
+    assert f(1, 2) == Matrix([1, 2])
+
+    # Test for issue described in the original bug report
+    f = lambdify([], tuple([1]))
+    assert f() == (1,)
     f2 = lambdify([x, y], (y, x), 'sympy')
     assert f2(2, 3) == (3, 2)
 
