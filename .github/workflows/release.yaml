name: Build and Release
on: 
  push:
    branches:
      - ft-binary

jobs:
  # test-examples:
  #   if: ${{ !inputs.skip_tests }}
  #   uses: ./.github/workflows/examples.yml
  #   with:
  #     working-directory: ./python
  #   secrets: inherit

  publish-core:
    name: Create Framework & Plugin Releases
    # needs: test-examples
    defaults:
      run:
        working-directory: ./python
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          python -m pip install --upgrade pip
          pip install twine build

          # Build dist
          python -m build

  publish-cli:
    name: Build and upload CLI
    needs: publish-core
    permissions: write-all
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12, macos-14, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Build for ${{ matrix.os }}
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

          cd python/
          pip3 install .

          # Build CLI
          pyinstaller --onefile composio/cli/__main__.py

      # Ubuntu Release
      - if: matrix.os == 'ubuntu-latest'
        run: |
          cd python/
          mv dist/__main__ dist/bin
          mv dist/bin/__main__ dist/bin/composio

          cd dist/
          zip -r composio-linux-amd64.zip bin/*
          rm -rf bin/
      - if: matrix.os == 'ubuntu-latest'
        name: Upload artifact to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: composio-linux-amd64
          path: python/dist/composio-linux-amd64.zip

      # Mac Intel Release
      - if: matrix.os == 'macos-12'
        run: |
          cd python/
          mv dist/__main__ dist/bin
          mv dist/bin/__main__ dist/bin/composio

          cd dist/
          zip -r composio-darwin-amd64.zip bin/*
          rm -rf bin/
      - if: matrix.os == 'macos-12'
        name: Upload artifact to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: composio-darwin-amd64
          path: python/dist/composio-darwin-amd64.zip

      # Mac ARM Release
      - if: matrix.os == 'macos-14'
        run: |
          cd python/
          mv dist/__main__ dist/bin
          mv dist/bin/__main__ dist/bin/composio

          cd dist/
          zip -r composio-darwin-arm64.zip bin/*
          rm -rf bin/
      - if: matrix.os == 'macos-14'
        name: Upload artifact to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: composio-darwin-arm64
          path: python/dist/composio-darwin-arm64.zip

      # # Windows release
      # - if: matrix.os == 'windows-latest'
      #   run: |
      #     cd python/
      #     mv dist/__main__ dist/bin
      #     mv dist/bin/__main__.exe dist/bin/composio.exe

      #     cd dist/
      #     zip -r composio-win.zip bin/*
      #     rm -rf bin/
      # - if: matrix.os == 'windows-latest'
      #   name: Upload artifact
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: python/dist/composio-win.zip

    name: Publish E2B template
    needs: publish-core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v4
      - name: Install E2B
        run: |
          npm install -g @e2b/cli@latest
      - name: Publishing Template
        env:
          E2B_ACCESS_TOKEN: ${{secrets.E2B_ACCESS_TOKEN}}
        run: |
          cd python/dockerfiles/
          make e2b